---
import type { Program as programProps } from "../tv/domain/Program";

import { formatDateHours, timeOfProgram } from "../utils.ts";
import More from "./More.astro";
import { ProgressBar } from "./preact/ProgressBar.tsx";

interface Props {
  program: programProps;
  title: string;
}

const {
  start,
  stop,
  categories,
  date,
  country,
  description,
  image,
  rating,
  tvShow,
  credits,
} = Astro.props.program;
const title = Astro.props.title;

const year = date ? new Date(date).getFullYear() : undefined;
const hasMetadatas = date && country ? true : false;
---

<div
  class="flex mb-3 justify-between p-2 bg-bg-muted rounded-lg snap-center program"
  data-categories={categories?.join(" ")}
>
  <div class="order-2">
    <object data={image} class="w-[65px] h-[90px] object-cover rounded-md">
      <img src="https://placehold.co/65x90?text=No image" />
    </object>
    <div class="flex items-center gap-0.5 mt-1.5">
      <ProgressBar
        client:load
        startDate={start.toString()}
        endDate={stop.toString()}
      />
    </div>
  </div>
  <div class="order-1 flex flex-col mr-[4px] text-button-default-fg">
    <div class="text-xs font-bold">
      <time datetime={start.toString()}>{formatDateHours(start)}</time>
    </div>
    <div class="mb-1 mt-[0.275em] leading-[1.125]">
      <h2 class="font-medium inline-block">
        {title}&nbsp;{
          tvShow?.season && tvShow?.episode ? (
            <span class="text-xs text-fg-muted">
              /&nbsp;S{tvShow?.season}E{tvShow?.episode}
            </span>
          ) : (
            ""
          )
        }
      </h2>
    </div>
    <div class="mb-2 text-xs font-medium">{timeOfProgram(start, stop)}</div>
    {
      hasMetadatas ? (
        <div class="mb-3 mr-2 text-xs">
          <div>
            <span class="font-medium">Date</span> : {year}
          </div>
          <div>
            <span class="font-medium">Pays</span> : {country}
          </div>
        </div>
      ) : undefined
    }

    <div class="mb-3 not-only-of-type:mr-2 text-xs">
      <More title={description ? `${description} [...]` : "[...]"}>
        {
          credits && Object.keys(credits).length > 0 ? (
            <div class="mt-3 mb-3 mr-2 text-xs">
              {Object.entries(credits)
                .sort(([keyA], [keyB]) => keyA.localeCompare(keyB))
                .map(([k, arr]) => (
                  <div>
                    <span class="font-medium">{arr[0].label ?? k}</span> :{" "}
                    {arr.map((c) => c.name).join(", ")}
                  </div>
                ))}
            </div>
          ) : undefined
        }
      </More>
    </div>

    <div class="text-xs font-medium">
      {
        rating?.icon ? (
          <object
            data={rating?.icon}
            class="w-[15px] h-[15px] object-cover rounded-full"
          />
        ) : (
          rating?.value
        )
      }
    </div>
  </div>
</div>
